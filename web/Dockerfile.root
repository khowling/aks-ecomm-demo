# First stage: compile things.
FROM node:12 AS Build

# Create app directory
WORKDIR /usr/src/app/web

# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY web/package*.json ./
RUN npm i

# Copy the rest of the application
COPY web/ ./

# Creates assets in ./build
ENV NODE_ENV=production
RUN npx webpack --config webpack.config.js

# compile React JSX in 'src' into 'lib' for SSR
RUN npx babel --config-file ./babel.config.json --out-dir lib ./src

# Required for imports for tsc compile
RUN mkdir ../common
COPY common/* ../common/

RUN mkdir ../ordering
COPY ordering/* ../ordering/



# Compile server Typescript
RUN cd ./server && \
    npx tsc  --build ./tsconfig.json

# Second stage: run things.
FROM node:12
WORKDIR /usr/src/app

COPY web/package*.json ./
RUN npm i --production

# Copy compiled assets
COPY --from=build /usr/src/app/web/build build

# Copy compiled typescript server
COPY --from=build /usr/src/app/web/server/out server/out

# not using @babel/register to automatically compile files on the fly.
COPY --from=build /usr/src/app/web/lib lib

EXPOSE 3000
CMD [ "node", "server/out/web/server/server" ]