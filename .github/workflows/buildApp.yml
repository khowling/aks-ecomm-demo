name: deploy
on:
  workflow_dispatch:
    inputs:
      buildContainer:
        description: 'Build Container (true/false)'     
        required: true
        default: 'true'
env:
  BUILD_ENV: true
  AKS_RG: "basic-dev-k8s-rg"
  AKS_NAME: "aks-basic-dev-k8s"
  ACRNAME: "crbasicdevk8sskihvrpgaysr2"
  APP_DOMAIN: "labhome.biz"


jobs:
  build:
    runs-on: ubuntu-latest
    environment: kh-emp-dev
    steps:
    - uses: actions/checkout@main
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: 2.deploy_app_dependencies
      if: ${{ env.BUILD_ENV }}
      run: |
        echo "${{secrets.ENV_AZURE_PREREQS}}" >> $GITHUB_ENV
        bash ./deploy/2.deploy_app_dependencies.sh >> $GITHUB_ENV

    - name: 2.testenv
      if: ${{ env.BUILD_ENV }}
      run: |
        echo "secrets.ENV_AZURE_PREREQS is ${{secrets.ENV_AZURE_PREREQS}}"
        echo "B2C_SIGNIN_POLICY is ${{ env.B2C_SIGNIN_POLICY }}"
 
    - name: 3.build_app
      if: ${{ github.event.inputs.buildContainer == 'true' }}
      run: |
        az acr build -r ${{ env.ACRNAME }} -t az-device-shop/web:0.1.0  -f ./web/Dockerfile .
        az acr build -r ${{ env.ACRNAME }} -t az-device-shop/factory:0.1.0  -f ./factory/Dockerfile .
        az acr build -r ${{ env.ACRNAME }} -t az-device-shop/ordering:0.1.0  -f ./ordering/Dockerfile .
    
    - uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: '${{env.AKS_NAME}}'
        resource-group: '${{env.AKS_RG}}'

    - uses: Azure/k8s-bake@v2
      with:
        renderEngine: 'helm'
        helmChart: './helm/az-device-shop/'
        overrides: |     
          global.registryHost:${{ env.ACRNAME }}.azurecr.io/
          global.env.MONGO_DB:${{ env.MONGO_DB }}
          global.env.STORAGE_ACCOUNT:${{ env.STORAGE_ACCOUNT }}
          global.env.STORAGE_CONTAINER:${{ env.STORAGE_CONTAINER }}
          global.env.STORAGE_MASTER_KEY:${{ env.STORAGE_MASTER_KEY }}
          global.env.STORAGE_DOWNLOAD_SAS:${{ env.STORAGE_DOWNLOAD_SAS }}
          global.ingressHost:${{ env.APPNAME }}
          global.ingressDomain:${{ env.APP_DOMAIN }}
          az-device-shop-web.env.B2C_RESETPWD_POLICY:${{ env.B2C_RESETPWD_POLICY }}
          az-device-shop-web.env.B2C_TENANT:${{ env.B2C_TENANT }}
          az-device-shop-web.env.B2C_CLIENT_SECRET:${{ env.B2C_CLIENT_SECRET }}
          az-device-shop-web.env.B2C_SIGNIN_POLICY:${{ env.B2C_SIGNIN_POLICY }}
          az-device-shop-web.env.B2C_CLIENT_ID:${{ env.B2C_CLIENT_ID }}
          az-device-shop-web.image.tab:0.1.0
          az-device-shop-ordering.image.tab:0.1.0
          az-device-shop-factory.image.tab:0.1.0
        helm-version: 'latest' 
      id: bake

    - uses: Azure/k8s-deploy@v1.2
      with:
        manifests: ${{ steps.bake.outputs.manifestsBundle }}
        imagepullsecrets: |
          demo-k8s-secret