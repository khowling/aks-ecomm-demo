name: Full End-2-End integration test
on:
  workflow_dispatch:

  pull_request:
    branches: [main]

env:
  AZURITE_ACCOUNT: "devstoreaccount1"
  AZURITE_MASTER_KEY: "Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw=="
  STORAGE_CONTAINER: "az-shop-images"

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.7.0
      with:
        mongodb-version: '4.2'
        mongodb-replica-set: rs0
    
    - name: Microservices build
      run: |
        npm -g install npm@latest
        sh ./workflows/dev.1.build.sh

    - name: Microservices Launch
      timeout-minutes: 1
      env:
        STORAGE_ACCOUNT: ${{ env.AZURITE_ACCOUNT }}
        STORAGE_MASTER_KEY: ${{ env.AZURITE_MASTER_KEY }}
        STORAGE_CONTAINER: ${{ env.STORAGE_CONTAINER }}
        MONGO_DB: "mongodb://localhost:27017/dbdev?replicaSet=rs0"
        USE_COSMOS: "false"
      run: |
        
        # Mkdir for `azurite` storage local emulator
        mkdir ./__blobstorage__
        # Start azurity only
        npx pm2 start ./pm2.config.js --only blob
        # Wait for azurite to launch, then create container
        sleep 2
        az storage container create  --connection-string "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;" -n az-shop-images

        # Start everything
        npx pm2 start ./pm2.config.js

        sleep 5
        # Print logs
        npx pm2 logs --nostream

    - name: Playwright End-to-End

      run: |
        npx playwright test

    - name: Archive Playwright
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playright-results
        path: test-results
 